<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	
    
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/mvc   
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd"
	>
	<!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
	<!-- default-lazy-init="false" default-autowire="byName" -->
	<!-- byName表示根据名称注解获取 -->
	<!-- 引入配置文件 -->
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		id="propertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"></property>
		<!-- ignoreUnresolvablePlaceholders为是否忽略不可解析的Placeholder，如配置了多个PropertyPlaceholderConfigurer，则需设置为true -->
	</bean>
	<bean id="mySqlDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${mysql.driver}"></property>
		<property name="jdbcUrl" value="${mysql.url}"></property>
		<property name="user" value="${mysql.username}"></property>
		<property name="password" value="${mysql.password}"></property>
		<property name="initialPoolSize" value="${mysql.initialPoolSize}"></property>
		<property name="minPoolSize" value="${mysql.minPoolSize}"></property>
		<property name="maxPoolSize" value="${mysql.maxPoolSize}"></property>
		<property name="maxIdleTime" value="${mysql.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${mysql.acquireIncrement}"></property>
		<property name="idleConnectionTestPeriod" value="${mysql.idleConnectionTestPeriod}"></property>
		<property name="acquireRetryAttempts" value="${mysql.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${mysql.breakAfterAcquireFailure}"></property>
		<property name="maxStatements" value="${mysql.maxStatements}"></property>
		<property name="testConnectionOnCheckout" value="${mysql.testConnectionOnCheckout}"></property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<!-- <bean id="dataSourceProxy"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="mySqlDataSource"></property>
	</bean> -->
	
	<bean  id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- <constructor-arg ref="dataSourceProxy"></constructor-arg> -->
		<property name="dataSource" ref="mySqlDataSource"/>
	</bean>

	<!--事务管理-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- <property name="dataSource" ref="dataSourceProxy"/> -->
		<property name="dataSource" ref="mySqlDataSource"/>
	</bean>

	<!-- 通知 -->
	<tx:advice id="tx" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"></tx:method>
		</tx:attributes>
	</tx:advice>

</beans>
	
	
	
	
	
	
	